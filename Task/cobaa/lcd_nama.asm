;====================================================================
; Main.asm file generated by New Project wizard
;
; Created:   Thu Apr 25 2024
; Processor: 80C31
; Compiler:  ASEM-51 (Proteus)
;====================================================================

$NOMOD51
$INCLUDE (8051.MCU)

;====================================================================
; DEFINITIONS
;====================================================================

;====================================================================
; VARIABLES
;====================================================================

;====================================================================
; RESET and INTERRUPT VECTORS
;====================================================================

      ; Reset Vector
      org   0000h
      jmp   Start

;====================================================================
; CODE SEGMENT
;====================================================================

      org   0100h
Start:	
    call init_lcd
    
    mov r0, #084h ;baris 1 kolom ke 4
    call send_inst

    ;MUHAMMAD
    mov r0, #01001101b  ; 'M'
    call lcd_print

    mov r0, #01010101b  ; 'U'
    call lcd_print

    mov r0, #01001000b  ; 'H'
    call lcd_print

    mov r0, #01000001b  ; 'A'
    call lcd_print

    mov r0, #01001101b  ; 'M'
    call lcd_print

    mov r0, #01001101b  ; 'M'
    call lcd_print

    mov r0, #01000001b  ; 'A'
    call lcd_print

    mov r0, #01000100b  ; 'D'
    call lcd_print

    mov r0, #0C4h ;baris 2 kolom ke 4
    call send_inst

    ;HAFIDZH
    mov r0, #01001000b  ; 'H'
    call lcd_print

    mov r0, #01000001b  ; 'A'
    call lcd_print

    mov r0, #01000110b  ; 'F'
    call lcd_print

    mov r0, #01001001b  ; 'I'
    call lcd_print

    mov r0, #01000100b  ; 'D'
    call lcd_print

    mov r0, #01011010b  ; 'Z'
    call lcd_print

    mov r0, #01001000b  ; 'H'
    call lcd_print

    jmp Start

init_lcd:
    mov r0, #00111000b ; function set
    call send_inst
    mov r0, #00000110b ; entry mode
    call send_inst
    mov r0, #00001100b ; display on/off control
    call send_inst
    mov r0, #00000001b ; clear display
    call send_inst
    ret

lcd_print:
    call send_data
    ret

send_inst:
    clr p1.0
    setb p1.1
    mov p2, r0
    call delay_lcd
    clr p1.1
    setb p1.1
    call delay_lcd
    ret
send_data:
    setb p1.0
    setb p1.1
    mov p2, r0
    call delay_lcd
    clr p1.1
    setb p1.1
    call delay_lcd
    ret

delay_lcd:
    mov r6, #055
    mov r7, #055
 delay_loop2lcd:
 delay_looplcd:
    dec r6
    nop
    cjne r6, #00, delay_looplcd
    dec r7
    cjne r7, #00, delay_loop2lcd
    ret
;====================================================================
      END