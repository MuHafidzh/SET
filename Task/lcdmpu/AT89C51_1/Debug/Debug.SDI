,,,;====================================================================
,,,; main.asm file generated by new project wizard
,,,;
,,,; created:   thu apr 25 2024
,,,; processor: 80c31
,,,; compiler:  asem-51 (proteus)
,,,;====================================================================
,,,
,,,$nomod51
,,,$include (8051.mcu)
,,,;   8051 processor definition file
,,,;   ==============================
,,,
,,,P0      DATA    080H
,,,SP      DATA    081H
,,,DPL     DATA    082H
,,,DPH     DATA    083H
,,,PCON    DATA    087H
,,,TCON    DATA    088H
,,,TMOD    DATA    089H
,,,TL0     DATA    08AH
,,,TL1     DATA    08BH
,,,TH0     DATA    08CH
,,,TH1     DATA    08DH
,,,P1      DATA    090H
,,,SCON    DATA    098H
,,,SBUF    DATA    099H
,,,P2      DATA    0A0H
,,,IE      DATA    0A8H
,,,P3      DATA    0B0H
,,,IP      DATA    0B8H
,,,PSW     DATA    0D0H
,,,ACC     DATA    0E0H
,,,B       DATA    0F0H
,,,
,,,IT0     BIT     088H
,,,IE0     BIT     089H
,,,IT1     BIT     08AH
,,,IE1     BIT     08BH
,,,TR0     BIT     08CH
,,,TF0     BIT     08DH
,,,TR1     BIT     08EH
,,,TF1     BIT     08FH
,,,RI      BIT     098H
,,,TI      BIT     099H
,,,RB8     BIT     09AH
,,,TB8     BIT     09BH
,,,REN     BIT     09CH
,,,SM2     BIT     09DH
,,,SM1     BIT     09EH
,,,SM0     BIT     09FH
,,,EX0     BIT     0A8H
,,,ET0     BIT     0A9H
,,,EX1     BIT     0AAH
,,,ET1     BIT     0ABH
,,,ES      BIT     0ACH
,,,EA      BIT     0AFH
,,,RXD     BIT     0B0H
,,,TXD     BIT     0B1H
,,,INT0    BIT     0B2H
,,,INT1    BIT     0B3H
,,,T0      BIT     0B4H
,,,T1      BIT     0B5H
,,,WR      BIT     0B6H
,,,RD      BIT     0B7H
,,,PX0     BIT     0B8H
,,,PT0     BIT     0B9H
,,,PX1     BIT     0BAH
,,,PT1     BIT     0BBH
,,,PS      BIT     0BCH
,,,P       BIT     0D0H
,,,OV      BIT     0D2H
,,,RS0     BIT     0D3H
,,,RS1     BIT     0D4H
,,,F0      BIT     0D5H
,,,AC      BIT     0D6H
,,,CY      BIT     0D7H
,,,
,,,RESET   CODE    000H
,,,EXTI0   CODE    003H
,,,TIMER0  CODE    00BH
,,,EXTI1   CODE    013H
,,,TIMER1  CODE    01BH
,,,SINT    CODE    023H
,,,
,,,;====================================================================
,,,; definitions
,,,;====================================================================
,,,
,,,;====================================================================
,,,; variables
,,,;====================================================================
,,,
,,,;====================================================================
,,,; reset and interrupt vectors
,,,;====================================================================
,,,
,,,      ; reset vector
,,,      org   0000h
0000,02 01 00,,      jmp   start
,,,
,,,;====================================================================
,,,; code segment
,,,;====================================================================
,,,
,,,      org   0100h
,,,
0100,,start,start:
0100,12 01 BB,,    lcall i2c_init
0103,12 02 11,,    call lcd_init
0106,12 01 C9,,    lcall i2c_start
0109,74 D0,,    mov a, #11010000b
010B,31 D9,,    acall i2c_write
010D,74 6B,,    mov a, #6bh
010F,31 D9,,    acall i2c_write
0111,74 00,,    mov a, #00h
0113,31 D9,,    acall i2c_write
0115,31 D0,,    acall i2c_stop
,,,
0117,12 01 BB,,    lcall i2c_init
011A,12 01 C9,,    lcall i2c_start
011D,74 D0,,    mov a, #11010000b
011F,31 D9,,    acall i2c_write
0121,74 1B,,    mov a, #1bh
0123,31 D9,,    acall i2c_write
0125,74 00,,    mov a, #00h
0127,31 D9,,    acall i2c_write
0129,31 D0,,    acall i2c_stop
,,,
,,,
012B,,loop,loop:
,,,    ; Gyro X
012B,12 01 BB,,    lcall i2c_init
012E,12 01 C9,,    lcall i2c_start
0131,74 D0,,    mov a, #11010000b
0133,31 D9,,    acall i2c_write
0135,74 43,,    mov a, #43h
0137,31 D9,,    acall i2c_write
0139,12 01 C9,,    lcall i2c_start
013C,74 D1,,    mov a, #11010001b
013E,31 D9,,    acall i2c_write
0140,51 01,,    acall i2c_read
0142,F8,,    mov r0, a
0143,31 F8,,    acall i2c_nack
0145,31 D0,,    acall i2c_stop
,,,
0147,74 80,,    mov a, #80h
0149,12 02 37,,    call lcd_set_cursor
,,,
014C,74 47,,    mov a, #'G'
014E,12 02 48,,    call lcd_send_data
0151,74 79,,    mov a, #'y'
0153,12 02 48,,    call lcd_send_data
0156,74 72,,    mov a, #'r'
0158,12 02 48,,    call lcd_send_data
015B,74 6F,,    mov a, #'o'
015D,12 02 48,,    call lcd_send_data
0160,74 58,,    mov a, #'X'
0162,12 02 48,,    call lcd_send_data
0165,74 3A,,    mov a, #':'
0167,12 02 48,,    call lcd_send_data
,,,
016A,E8,,    mov a, r0
016B,12 02 59,,    call lcd_print
,,,
,,,    ; Accel X
016E,12 01 BB,,    lcall i2c_init
0171,12 01 C9,,    lcall i2c_start
0174,74 D0,,    mov a, #11010000b
0176,31 D9,,    acall i2c_write
0178,74 3B,,    mov a, #3bh
017A,31 D9,,    acall i2c_write
017C,12 01 C9,,    lcall i2c_start
017F,74 D1,,    mov a, #11010001b
0181,31 D9,,    acall i2c_write
0183,51 01,,    acall i2c_read
0185,F8,,    mov r0, a
0186,31 F8,,    acall i2c_nack
0188,31 D0,,    acall i2c_stop
,,,
018A,74 C0,,    mov a, #0C0h
018C,12 02 37,,    call lcd_set_cursor
,,,
018F,74 41,,    mov a, #'A'
0191,12 02 48,,    call lcd_send_data
0194,74 63,,    mov a, #'c'
0196,12 02 48,,    call lcd_send_data
0199,74 63,,    mov a, #'c'
019B,12 02 48,,    call lcd_send_data
019E,74 65,,    mov a, #'e'
01A0,12 02 48,,    call lcd_send_data
01A3,74 6C,,    mov a, #'l'
01A5,12 02 48,,    call lcd_send_data
01A8,74 58,,    mov a, #'X'
01AA,12 02 48,,    call lcd_send_data
01AD,74 3A,,    mov a, #':'
01AF,12 02 48,,    call lcd_send_data
,,,
01B2,E8,,    mov a, r0
01B3,12 02 59,,    call lcd_print
,,,
01B6,12 02 7D,,    call delay
,,,
01B9,21 2B,,    jmp loop
,,,
01BB,,i2c_init,i2c_init:
01BB,D2 92,,    setb p1.2
01BD,D2 93,,    setb p1.3
01BF,22,,    ret
,,,
01C0,,i2c_reset,i2c_reset:
01C0,C2 93,,    clr p1.3
01C2,D2 92,,    setb p1.2
01C4,D2 93,,    setb p1.3
01C6,C2 92,,    clr p1.2
01C8,22,,    ret
,,,
01C9,,i2c_start,i2c_start:
01C9,D2 93,,    setb p1.3
01CB,C2 92,,    clr p1.2
01CD,C2 93,,    clr p1.3
01CF,22,,    ret
,,,
01D0,,i2c_stop,i2c_stop:
01D0,C2 93,,    clr p1.3
01D2,C2 92,,    clr p1.2
01D4,D2 93,,    setb p1.3
01D6,D2 92,,    setb p1.2
01D8,22,,    ret
,,,
01D9,,i2c_write,i2c_write:
01D9,7F 08,,    mov r7, #08
01DB,,i2c_write_loop,i2c_write_loop:
01DB,C2 93,,    clr p1.3
01DD,33,,    rlc a
01DE,92 92,,    mov p1.2, c
01E0,D2 93,,    setb p1.3
01E2,DF F7,,    djnz r7, i2c_write_loop
01E4,C2 93,,    clr p1.3
01E6,D2 92,,    setb p1.2
01E8,D2 93,,    setb p1.3
01EA,A2 92,,    mov c, p1.2
01EC,C2 93,,    clr p1.3
01EE,22,,    ret
,,,
01EF,,i2c_ack,i2c_ack:
01EF,C2 92,,    clr p1.2
01F1,D2 93,,    setb p1.3
01F3,C2 93,,    clr p1.3
01F5,D2 92,,    setb p1.2
01F7,22,,    ret
,,,
01F8,,i2c_nack,i2c_nack:
01F8,D2 92,,    setb p1.2
01FA,D2 93,,    setb p1.3
01FC,C2 93,,    clr p1.3
01FE,D2 93,,    setb p1.3
0200,22,,    ret
,,,
0201,,i2c_read,i2c_read:
0201,7F 08,,    mov r7, #08
0203,,i2c_read_loop,i2c_read_loop:
0203,C2 93,,    clr p1.3
0205,D2 93,,    setb p1.3
0207,A2 92,,    mov c, p1.2
0209,33,,    rlc a
020A,DF F7,,    djnz r7, i2c_read_loop
020C,C2 93,,    clr p1.3
020E,D2 92,,    setb p1.2
0210,22,,    ret
,,,
0211,,lcd_init,lcd_init:
0211,74 38,,    mov a, #00111000b
0213,12 02 26,,    call send_inst
0216,74 06,,    mov a, #00000110b
0218,12 02 26,,    call send_inst
021B,74 0C,,    mov a, #00001100b
021D,12 02 26,,    call send_inst
0220,74 01,,    mov a, #00000001b
0222,12 02 26,,    call send_inst
0225,22,,    ret
,,,
0226,,send_inst,send_inst:
0226,C2 90,,    clr p1.0
0228,D2 91,,    setb p1.1
022A,F5 A0,,    mov p2, a
022C,12 02 7D,,    call delay
022F,C2 91,,    clr p1.1
0231,D2 91,,    setb p1.1
0233,12 02 7D,,    call delay
0236,22,,    ret
,,,
0237,,lcd_set_cursor,lcd_set_cursor:
0237,C2 90,,    clr p1.0
0239,D2 91,,    setb p1.1
023B,F5 A0,,    mov p2, a
023D,12 02 7D,,    call delay
0240,C2 91,,    clr p1.1
0242,D2 91,,    setb p1.1
0244,12 02 7D,,    call delay
0247,22,,    ret
,,,
0248,,lcd_send_data,lcd_send_data:
0248,D2 90,,    setb p1.0
024A,D2 91,,    setb p1.1
024C,F5 A0,,    mov p2, a
024E,12 02 7D,,    call delay
0251,C2 91,,    clr p1.1
0253,D2 91,,    setb p1.1
0255,12 02 7D,,    call delay
0258,22,,    ret
,,,
0259,,lcd_print,lcd_print:
0259,75 F0 64,,    mov b, #64h
025C,84,,    div ab
025D,F9,,    mov r1, a
025E,E5 F0,,    mov a, b
,,,
0260,75 F0 0A,,    mov b, #0ah
0263,84,,    div ab
0264,FA,,    mov r2, a
0265,AB F0,,    mov r3, b
,,,
0267,E9,,    mov a, r1
0268,24 30,,    add a, #30h
026A,F9,,    mov r1, a
,,,
026B,EA,,    mov a, r2
026C,24 30,,    add a, #30h
026E,FA,,    mov r2, a
,,,
026F,EB,,    mov a, r3
0270,24 30,,    add a, #30h
0272,FB,,    mov r3, a
,,,
0273,E9,,    mov a, r1
0274,51 48,,    call lcd_send_data
,,,
0276,EA,,    mov a, r2
0277,51 48,,    call lcd_send_data
,,,
0279,EB,,    mov a, r3
027A,51 48,,    call lcd_send_data
,,,
027C,22,,    ret
,,,
027D,,delay,delay:
027D,7F 01,,    mov r7, #01
027F,,delay_loop1,delay_loop1:
027F,7E 37,,    mov r6, #055
0281,,delay_loop2,delay_loop2:
0281,7D 37,,    mov r5, #055
0283,,delay_loop3,delay_loop3:
0283,1D,,    dec r5
0284,00,,    nop
0285,BD 00 FB,,    cjne r5, #00, delay_loop3
0288,1E,,    dec r6
0289,BE 00 F5,,    cjne r6, #00, delay_loop2
028C,1F,,    dec r7
028D,BF 00 EF,,    cjne r7, #00, delay_loop1
0290,22,,    ret
,,,
,,,
,,,;====================================================================
000E,,,      end
